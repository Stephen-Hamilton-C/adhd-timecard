import java.nio.file.Files
import java.nio.file.Paths
import java.util.zip.ZipFile

var debianVersion = "1"

// https://stackoverflow.com/a/40624832
def unzipFile(File file) {
	def zipFile = new ZipFile(file)
	zipFile.entries().each { it ->
		def path = Paths.get(file.getParent(), it.name)
		if(it.directory){
			Files.createDirectories(path)
		} else {
			def parentDir = path.getParent()
			if (!Files.exists(parentDir)) {
				Files.createDirectories(parentDir)
			}
			Files.copy(zipFile.getInputStream(it), path)
		}
	}
}

tasks.create("debianClean") {
	doFirst {
		delete(
				Paths.get("build", "distributions", "timecard-kt"),
				Paths.get("build", "debian"),
		)
	}
}

tasks.create("debianPrepare") {
	dependsOn "build", "debianClean"

	doFirst {
		exec {
			workingDir rootProject.file("deploy/debian")
			commandLine "python", "changelog.py", debianVersion
		}
	}

	doLast {
		unzipFile(new File("build/distributions/timecard-kt.zip"))

		// Copy unzipped distribution, don't bring the Windows executable with it
		copy {
			from rootProject.files("build/distributions/timecard-kt")
			into rootProject.file("build/debian/timecard-kt")
			exclude("**/*.bat")
		}

		// Ensure executable is executable
		exec {
			workingDir rootProject.file("build/debian/timecard-kt/bin")
			commandLine "chmod", "+x", "timecard-kt"
		}

		// Copy files from docs
		copy {
			from rootProject.files("LICENSE", "CHANGELOG.md", "README.md")
			into rootProject.file("build/debian/timecard-kt")
		}

		// Copy Debian package configs
		copy {
			from rootProject.files("deploy/debian/debian")
			into rootProject.file("build/debian/timecard-kt/debian")
		}

		// Remove unused library so that Lintian can be happy
		delete(Paths.get("build", "debian", "timecard-kt", "lib", "kotlin-stdlib-common-1.7.0.jar"))
	}
}

tasks.create("debianBuild") {
	dependsOn "debianPrepare"
	doLast {
		exec {
			workingDir rootProject.file("build/debian/timecard-kt")
			commandLine "debuild", "-i", "-us", "-uc", "-b"
		}
	}
}

tasks.create("debianDeploy") {
	dependsOn "debianPrepare"
	doLast {
		exec {
			workingDir rootProject.file("build/debian/timecard-kt")
			commandLine "sh", "-c", "yes | debuild -S"
		}
		exec {
			workingDir rootProject.file("build/debian")
			commandLine "sh", "-c", "dput ppa:stephen-hamilton-c/testing *_source.changes"
		}
	}
}
