import java.nio.file.Paths

tasks.create("snapPrepare") {
    dependsOn("fatJar")
    // Delete duplicate jar so it won't get packaged
    doLast {
        delete(Paths.get("build", "libs", "timecard-kt.jar"))
    }
}

tasks.create("snapBuild") {
    // Don't need to depend on snapPrepare - snapcraft will clone this repo and run snapPrepare
    doLast {
        def craft = new File("snapcraft.yaml")
        def origCraft = new File("snapcraft.yaml.orig")
        origCraft.write(craft.text)
        exec {
            workingDir rootProject.file("deploy/snap")
			commandLine "python", "version_setter.py"
        }
        exec {
            commandLine "bash", "-c", "snapcraft"
        }
        craft.delete()
        craft.write(origCraft.text)
        origCraft.delete()
    }
}

tasks.create("snapDeploy") {
    dependsOn("snapBuild")
    doLast {
        exec {
            commandLine "bash", "-c", "\"snapcraft upload timecard-kt_*.snap\""
        }
    }
}