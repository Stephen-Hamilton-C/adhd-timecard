/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package app.shamilton.timecard

import app.shamilton.timecard.command.CommandList
import app.shamilton.timecard.command.ICommand

class App() {

	val NAME = "timecard"
	val VERSION = "0.0.1-DEV"
	val AUTHOR = "stephen-hamilton-c"

	companion object {
		private var _args: List<String> = listOf()
		private var _argsInitialized: Boolean = false
	}

	/**
	 * Retrieves an argument as all uppercase or null if not present.
	 * 0 is the name of the ICommand
	 */
	fun getArg(index: Int): String? {
		return if(_args.size > index) _args[index].uppercase() else null
	}

	/**
	 * Initializes the argument list.
	 * This will throw an IllegalCallerException if not called in main.
	 */
	constructor(args: Array<String>): this() {
		if(_argsInitialized) throw IllegalCallerException("App(args) constructor can only be called by main!")
		_args = args.asList()
		_argsInitialized = true
	}

}

fun main(args: Array<String>) {
	val app = App(args)
	val commandName: String = app.getArg(0) ?: "STATUS"
	val foundCommand: ICommand? = CommandList.COMMANDS.find { it.m_Name == commandName }
	foundCommand?.execute() ?: println("Unknown command. Use 'timecard help' for a list of commands.")
}
