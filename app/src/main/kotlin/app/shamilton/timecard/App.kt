/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package app.shamilton.timecard

import app.shamilton.timecard.command.CommandList
import app.shamilton.timecard.command.ICommand

object App {

	const val VERSION = "0.0.1-DEV"

	private var _argsInitialized: Boolean = false
	private var _args: List<String> = listOf()

	/**
	 * Retrieves an argument as all uppercase or null if not present.
	 * 0 is the name of the ICommand
	 */
	fun getArg(index: Int): String? {
		return if(_args.size > index) _args[index].uppercase() else null
	}

	fun setArgs(args: Array<String>) {
		if(_argsInitialized) throw IllegalCallerException("App.setArgs(args) can only be called by main!")
		_args = args.asList()
		_argsInitialized = true
	}

}

fun main(args: Array<String>) {
	App.setArgs(args)
	val commandName: String = App.getArg(0) ?: "STATUS"
	val foundCommand: ICommand? = CommandList.COMMANDS.find { it.m_Name == commandName }
	foundCommand?.execute() ?: println("Unknown command. Use 'timecard help' for a list of commands.")
}
