/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package app.shamilton.timecardkt

import app.shamilton.timecardkt.command.CommandList
import app.shamilton.timecardkt.command.IAutoCommand
import app.shamilton.timecardkt.command.ICommand
import app.shamilton.timecardkt.Color.yellow

object App {

	const val NAME = "timecard-kt"
	const val VERSION = "1.2.0"
	const val AUTHOR = "stephen-hamilton-c"

	private var _argsInitialized: Boolean = false
	private var _args: List<String> = listOf()

	/**
	 * Retrieves an argument as all uppercase or null if not present.
	 * 0 is the name of the ICommand
	 */
	fun getArg(index: Int): String? {
		return if(_args.size > index) _args[index].uppercase() else null
	}

	/**
	 * Gets all args from the provided starting index to the end of the args entered by the user.
	 * 0 is the name of the ICommand
	 */
	fun getArgs(startIndex: Int): List<String>? {
		return if(_args.size > startIndex) {
			val args = mutableListOf<String>()
			for(i in startIndex until _args.size) {
				args.add(_args[i].uppercase())
			}
			args
		} else {
			null
		}
	}

	fun setArgs(args: Array<String>) {
		if(_argsInitialized) throw IllegalStateException("App._args has already been initialized! App.setArgs(args) should only be called by main.")
		_args = args.asList()
		_argsInitialized = true
	}

}

fun main(args: Array<String>) {
	App.setArgs(args)
	val commandName: String = App.getArg(0) ?: "STATUS"
	val foundCommand: ICommand? = CommandList.COMMANDS.find { it.m_Name == commandName }
	foundCommand?.execute() ?: println(yellow("Unknown command. Use '${App.NAME} help' for a list of commands."))

	// Run AutoCommands
	for (command: ICommand in CommandList.COMMANDS) {
		if (command is IAutoCommand) {
			command.autoRun()
		}
	}
}
