/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package app.shamilton.timecardkt

import app.shamilton.timecardkt.command.CommandList
import app.shamilton.timecardkt.command.IAutoCommand
import app.shamilton.timecardkt.command.ICommand
import java.nio.file.InvalidPathException
import java.nio.file.Paths

object App {

	const val NAME = "timecard-kt"
	const val VERSION = "1.0.1"
	const val AUTHOR = "stephen-hamilton-c"

	private var _argsInitialized: Boolean = false
	private var _args: List<String> = listOf()

	/**
	 * Retrieves an argument as all uppercase or null if not present.
	 * 0 is the name of the ICommand
	 */
	fun getArg(index: Int): String? {
		return if(_args.size > index) _args[index].uppercase() else null
	}

	fun setArgs(args: Array<String>) {
		if(_argsInitialized) throw IllegalStateException("App._args has already been initialized! App.setArgs(args) should only be called by main.")
		_args = args.asList()
		_argsInitialized = true
	}

}

private fun isValidPath(path: String?): Boolean {
	if(path.isNullOrBlank()) return false
	try {
		Paths.get(path)
	} catch(e: InvalidPathException) {
		return false
	}
	return true
}

fun main(args: Array<String>) {
	println("XDG_CONFIG_HOME is set: ${System.getenv().containsKey("XDG_CONFIG_HOME")}")
	println("XDG_CONFIG_HOME is valid path: ${isValidPath(System.getenv("XDG_CONFIG_HOME"))}")
	println("XDG_DATA_HOME is set: ${System.getenv().containsKey("XDG_DATA_HOME")}")
	println("XDG_DATA_HOME is valid path: ${isValidPath(System.getenv("XDG_DATA_HOME"))}")
	App.setArgs(args)
	val commandName: String = App.getArg(0) ?: "STATUS"
	val foundCommand: ICommand? = CommandList.COMMANDS.find { it.m_Name == commandName }
	foundCommand?.execute() ?: println("Unknown command. Use '${App.NAME} help' for a list of commands.")

	// Run AutoCommands
	for (command: ICommand in CommandList.COMMANDS) {
		if (command is IAutoCommand) {
			command.autoRun()
		}
	}
}
